<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.ssm"/>

	<!-- 第一种方式：加载一个properties文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"/>
	</bean>


	<!-- 第二种方式：加载多个properties文件
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:common.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8"/>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties"/>
	</bean>
	-->

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbcDriver}"/>
		<property name="url" value="${jdbcUrl}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"/>
		<!-- 连接池最大空闲 -->

		<property name="maxIdle" value="${maxIdle}"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"/>
	</bean>

	<!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
	<!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>

		&lt;!&ndash; 自动扫描mapping.xml文件

		<property name="mapperLocations" value="classpath:mapping/*.xml"></property>
		&ndash;&gt;

		<property name="configLocation" value="classpath:mybatis-config.xml"></property>

		<property name="mapperLocations" value="classpath:mapping/*.xml"></property>

	</bean>-->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapping/*.xml"/>
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.ssm.model"/>
		<!--<property name="plugins">
			<array>
				&lt;!&ndash; 分页插件配置 &ndash;&gt;
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql"/>
				</bean>
			</array>
		</property>-->
		<!-- 全局配置注入 -->
		<!--<property name="globalConfig" ref="globalConfig"/>-->
	</bean>

	<!--<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		&lt;!&ndash;
			AUTO->`0`("数据库ID自增")
			 INPUT->`1`(用户输入ID")
			ID_WORKER->`2`("全局唯一ID")
			UUID->`3`("全局唯一ID")
		&ndash;&gt;
		<property name="idType" value="0"/>
		&lt;!&ndash;
			MYSQL->`mysql`
			ORACLE->`oracle`
			DB2->`db2`
			H2->`h2`
			HSQL->`hsql`
			SQLITE->`sqlite`
			POSTGRE->`postgresql`
			SQLSERVER2005->`sqlserver2005`
			SQLSERVER->`sqlserver`
		&ndash;&gt;
		&lt;!&ndash; Oracle需要添加该项 &ndash;&gt;
		&lt;!&ndash; <property name="dbType" value="oracle" /> &ndash;&gt;
		<property name="dbType" value="sqlserver"/>
		&lt;!&ndash; 全局表为下划线命名设置 true &ndash;&gt;
		<property name="dbColumnUnderline" value="true"/>
	</bean>-->

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>


	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven/>
</beans>